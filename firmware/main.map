Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
tpi_dly_cnt         0x2               tpi.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
sck_spsr            0x1               isp.o
ispTransmit         0x2               isp.o
sck_spcr            0x1               isp.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
isp_hiaddr          0x1               isp.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o
chip                0x1               isp.o
sck_sw_delay        0x1               isp.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD isp.o
LOAD clock.o
LOAD tpi.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1444
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x78 usbdrv/usbdrv.o
                0x0000000000000026                usbDescriptorConfiguration
                0x0000000000000038                usbDescriptorDevice
                0x000000000000004a                usbDescriptorStringSerialNumber
                0x0000000000000070                usbDescriptorStringDevice
                0x000000000000007e                usbDescriptorStringVendor
                0x000000000000009a                usbDescriptorString0
                0x000000000000009e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000009e                __ctors_start = .
 *(.ctors)
                0x000000000000009e                __ctors_end = .
                0x000000000000009e                __dtors_start = .
 *(.dtors)
                0x000000000000009e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000009e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x000000000000009e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000009e        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000aa       0x16 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                0x00000000000000aa                __do_copy_data
 .init4         0x00000000000000c0       0x10 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000c0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000d0        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000d4        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x00000000000000d4                __vector_12
                0x00000000000000d4                __bad_interrupt
                0x00000000000000d4                __vector_6
                0x00000000000000d4                __vector_3
                0x00000000000000d4                __vector_11
                0x00000000000000d4                __vector_13
                0x00000000000000d4                __vector_17
                0x00000000000000d4                __vector_7
                0x00000000000000d4                __vector_5
                0x00000000000000d4                __vector_4
                0x00000000000000d4                __vector_9
                0x00000000000000d4                __vector_2
                0x00000000000000d4                __vector_15
                0x00000000000000d4                __vector_8
                0x00000000000000d4                __vector_14
                0x00000000000000d4                __vector_10
                0x00000000000000d4                __vector_16
                0x00000000000000d4                __vector_18
 .text          0x00000000000000d6      0x274 usbdrv/usbdrv.o
                0x00000000000000d6                usbPoll
                0x000000000000033c                usbInit
 .text          0x000000000000034a      0x28c usbdrv/usbdrvasm.o
                0x000000000000034a                usbCrc16
                0x0000000000000374                usbCrc16Append
                0x000000000000037c                __vector_1
 .text          0x00000000000005d6        0x0 usbdrv/oddebug.o
 .text          0x00000000000005d6      0x654 isp.o
                0x00000000000005d6                ispTransmit_sw
                0x0000000000000614                ispTransmit_hw
                0x000000000000066c                spiHWenable
                0x000000000000067a                ispSetSCKOption
                0x0000000000000760                ispDelay
                0x0000000000000770                ispConnect
                0x0000000000000808                ispDisconnect
                0x0000000000000818                ispEnterProgrammingMode
                0x0000000000000948                ispReadFlash
                0x00000000000009e0                ispWriteFlash
                0x0000000000000ada                ispFlushPage
                0x0000000000000b88                ispReadEEPROM
                0x0000000000000bd2                ispWriteEEPROM
 .text          0x0000000000000c2a       0x18 clock.o
                0x0000000000000c2a                clockWait
 .text          0x0000000000000c42       0xd2 tpi.o
                0x0000000000000c42                tpi_init
                0x0000000000000c62                tpi_send_byte
                0x0000000000000ca8                tpi_recv_byte
                0x0000000000000cda                tpi_read_block
                0x0000000000000cee                tpi_write_block
 .text          0x0000000000000d14      0x706 main.o
                0x0000000000000d14                ispEnterProgrammingMode_jarodlau
                0x0000000000000d56                usbFunctionSetup
                0x0000000000001174                usbFunctionRead
                0x0000000000001270                usbFunctionWrite
 .text          0x000000000000141a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text          0x000000000000141a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000141a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x000000000000141a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000141a       0x26 main.o
                0x000000000000141a                main
 .text.libgcc.mul
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x0000000000001440                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001440        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                0x0000000000001440                exit
                0x0000000000001440                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001440        0x4 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001444                _etext = .

.data           0x0000000000800060        0x2 load address 0x0000000000001444
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x2 usbdrv/usbdrv.o
                0x0000000000800061                usbTxLen
 .data          0x0000000000800062        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800062        0x0 usbdrv/oddebug.o
 .data          0x0000000000800062        0x0 isp.o
 .data          0x0000000000800062        0x0 clock.o
 .data          0x0000000000800062        0x0 tpi.o
 .data          0x0000000000800062        0x0 main.o
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end, .)

.bss            0x0000000000800062       0x4a
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800062        0x1 usbdrv/usbdrv.o
 .bss           0x0000000000800063        0x0 usbdrv/usbdrvasm.o
 .bss           0x0000000000800063        0x0 usbdrv/oddebug.o
 .bss           0x0000000000800063        0x0 isp.o
 .bss           0x0000000000800063        0x0 clock.o
 .bss           0x0000000000800063        0x0 tpi.o
 .bss           0x0000000000800063       0x15 main.o
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800078       0x2a usbdrv/usbdrv.o
                0x0000000000800078                usbTxBuf
                0x0000000000800083                usbDeviceAddr
                0x0000000000800084                usbRxToken
                0x0000000000800085                usbInputBufOffset
                0x0000000000800086                usbMsgPtr
                0x0000000000800088                usbRxLen
                0x0000000000800089                usbNewDeviceAddr
                0x000000000080008a                usbCurrentTok
                0x000000000080008b                usbConfiguration
                0x000000000080008c                usbRxBuf
 COMMON         0x00000000008000a2        0x7 isp.o
                0x00000000008000a2                sck_spsr
                0x00000000008000a3                ispTransmit
                0x00000000008000a5                sck_spcr
                0x00000000008000a6                isp_hiaddr
                0x00000000008000a7                chip
                0x00000000008000a8                sck_sw_delay
 *fill*         0x00000000008000a9        0x1 
 COMMON         0x00000000008000aa        0x2 tpi.o
                0x00000000008000aa                tpi_dly_cnt
                0x00000000008000ac                PROVIDE (__bss_end, .)
                0x0000000000001444                __data_load_start = LOADADDR (.data)
                0x0000000000001446                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000ac        0x0
                0x00000000008000ac                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000ac                PROVIDE (__noinit_end, .)
                0x00000000008000ac                _end = .
                0x00000000008000ac                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 usbdrv/usbdrv.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 usbdrv/oddebug.o
 .comment       0x0000000000000000       0x12 isp.o
 .comment       0x0000000000000000       0x12 clock.o
 .comment       0x0000000000000000       0x12 main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
